#!/bin/sh

# "wrapper" mode, to kill telnet when user presses "stop" in browser.
# If $1 is empty - this script is started by lighttpd
# and it spawns a subprocess ($PID) with non-empty $1.
# When user presses "stop" - lighttpd send SIGTERM to this script,
# and it terminates all children of $PID subprocess, including openssl.
# based on https://unix.stackexchange.com/q/146756
if test -z "$1"; then
	trap 'pkill -P $PID' TERM INT
	exec 3<&0
	"$0" subprocess <&3 &
	PID=$!
	wait $PID
	exit
fi

echo "HTTP/1.0 200 OK"
# echo "Cache-Control: max-age=600" # 10min
# echo "Cache-Control: max-age=3600" #1h
# echo "Cache-Control: max-age=86400" #1d
if test "${PATH_INFO: -12}" == '/favicon.txt'; then
	echo "Cache-Control: max-age=31536000" #1y
else
	echo "Cache-Control: max-age=604800" #1w
fi

# echo
# echo "[$0]"
# export
# exit

# convert HTTP request to gemini
host="${PATH_INFO:1}"
host="${host%%/*}"
url="${PATH_INFO:$(( ${#host} + 1 ))}"
# url="${PATH_INFO:1}"
# url="${url#*/}"
test -z "$url" && url='/'
port=300
if [[ "$host" == '*:*' ]]; then
	port="${host##*:}"
	host="${host%%:*}"
fi

# TODO: if client sends length as a header, we can use that, like in titan
# save
datafile="/tmp/spartan-$$"
trap 'rm $datafile' EXIT
cat >"$datafile"
len="$(cat "$datafile" | wc -l)"

# request line
spartan="$host $url $len"

# echo
# echo $host $port
# echo "$spartan"
# exit

# echo \{ echo "$spartan"\; cat "$datafile"\; \} \| nc "$host" "$port"
# exit

{ echo "$spartan"; cat "$datafile"; } | nc "$host" "$port" | (
	# convert spartan response to HTTP
	read -r code line;
	test -z "$code" && code="0"
	echo "Response-Code: $code"
	test "$code" = 2 && echo "Content-Type: $line" || echo "Meta: $line"
	echo
	cat
)
